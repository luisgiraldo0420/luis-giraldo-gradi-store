{%- style -%}
.inputVariationProduct{
  width: 20px;
  height: 20px;
  border: none;
  margin-bottom: 10px;
  border: 1px solid black;
  border-radius: 50%;
}
#color{
  max-width:220px;
  width:90%;
  height: 40px;
}
#color ul li{
  list-style-type:none;
  display:inline-block;
}
label {
  width: 24px;
  margin-right:14px;
}
input.input_productgrid:empty {
    margin-left: -9999px;
  display:none;
}
input.input_productgrid:empty ~ label {
    position: relative;
    float: left;
    line-height: 24px;
    text-indent: 3.25em;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    border-radius: 50%;
    border: 1px solid black;
}

{%- endstyle -%}


<div class="color-{{ section.settings.color_scheme }} gradient">
    <div class="product-recommendations page-width section-{{ section.id }}-padding isolate" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}">
      <div class="title-wrapper-with-link{% if show_mobile_slider %} title-wrapper--self-padded-tablet-down{% else %} title-wrapper--self-padded-mobile{% endif %} title-wrapper--no-top-margin">
        <h2 class="collection-list-title">{{ section.settings.title | escape }} Productos</h2>
      </div>
      <ul class="grid product-grid grid--{{ section.product-grid.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_mobile }}-col-tablet-down" role="list">
            {% for product in collections['coleccionprod'].products %}
            <li class="grid__item">
                <a href="{{ product.url }}" class="product__title">
                  <img id="product_image-{{product.url}}" 
                  src="{{ product.images | first | image_url: width: 300  }}" 
                  alt="{{ product.title }}" l
                  oading='lazy' 
                  width=300 
                  height=300
                  defaultImage="{{product.images | first | image_url: width: 300}}" />
                  </a>
                   <div class="card__information">
                        <h3 class="card__heading">{{ product.title }}</h3>
                        <h3 class="card__heading">{{ product.price | money_with_currency  }}</h3>
                        <div class="container">
                          {% assign colors_list = section.settings.colors | newline_to_br | split: '<br />' %}
                          <style>
                            {%- for color in colors_list -%}
                            {%- assign css = color | split: '|' -%}
                              .color_{{ css[0] | handle }} { background: {{css[1]}} }
                             /*  {%- comment -%}In this example I'm using background, you can use whatever you want{%- endcomment -%} */
                            {%- endfor -%}
                          </style>
                          {% for product_option in product.options_with_values %}
                            <p>{{ product_option.name }}:</p>
                            {% if product_option.name == 'Color' or product_option.name == 'Colour' %}
                              <div id="color" class="wrapper">
                                {% for value in product_option.values %}
                                {% liquid
                                  assign currentPosition=forloop.index | minus: 1
                                  assign variant=product.variants[currentPosition] 
                              %}
                              <!-- <div id="color" class="wrapper"> -->
                                <input 
                                class="input_productgrid" 
                                 idImageProd="product_image-{{product.url}}"
                                 image_hover="{{variant | image_url}}"
                                type="radio" value="{{ value | handle }}" {% if product_option.selected_value == value %}checked{% endif %}>
                                <label 
                                for="{{ value | handle }}" 
                                class="color_{{ value | handle }} input_productgrid" 
                                idImageProd="product_image-{{product.url}}"
                                image_hover="{{variant | image_url}}">&nbsp;</label>
                             <!--  </div> -->
                                {%- endfor -%}
                              </div>
                            {% else %}
                              <select class=" select__select">
                                {% for value in product_option.values %}
                                  <option {% if product_option.selected_value == value %}selected{% endif %}>
                                    {{ value }}
                                  </option>
                                {% endfor %}
                              </select>
                            {% endif %}
                          {% endfor %}
                                            </div>
                       
                        <quantity-input class="quantity mb-5">
                          <button class="quantity__button no-js-hidden" name="minus" type="button">
                            <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                            {% render 'icon-minus' %}
                          </button>
                          <input class="quantity__input"
                              type="number"
                              name="quantity"
                              id="Quantity-{{ section.id }}"
                              min="1"
                              value="1"
                              form="{{ product_form_id }}"
                            >
                          <button class="quantity__button no-js-hidden" name="plus" type="button">
                            <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                            {% render 'icon-plus' %}
                          </button>
                        </quantity-input>


              
                   <div class="product-form__buttons">
                     {% assign variant = product.variants[0] | json %}
                    <button
                      type="submit"
                      name="add"
                      id="add-product"
                      onclick=enviar({{variant}})
                      class="product-form__submit button button--full-width ">
                        <span>
                          {%- if product.selected_or_first_available_variant.available -%}
                            {{ 'products.product.add_to_cart' | t }}
                          {%- else -%}
                            {{ 'products.product.sold_out' | t }}
                          {%- endif -%}
                        </span
                    </button>
                    {%- if block.settings.show_dynamic_checkout -%}
                      {{ form | payment_button }}
                    {%- endif -%}
                  </div>
            </li>
            {% endfor %}
            
      </ul>
      
    </div>
</div>




<script>


  const enviar = (id) =>{
    console.log('llega');
  let formData = {
   'items': [{
    'id': id,
    'quantity': 2
    }]
  };
  fetch(window.Shopify.routes.root + 'cart/add.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(formData)
  })
  .then(response => {
    return response.json();
  })
  .catch((error) => {
    console.error('Error:', error);
  })
  .finally(()=>{
    window.document.location.href = "https://luis-giraldo-gradi-store.myshopify.com/cart"
  })
  }
  
  
     let inputs = document.getElementsByClassName("input_productgrid")
      for(item of inputs) {
          item.addEventListener("mouseover", function(e) {
              let image = e.target.getAttribute("image_hover")
              let imageProduct = document.getElementById(e.target.getAttribute("idImageProd"))
              imageProduct.setAttribute("src", image)
          })
          item.addEventListener("mouseout", function(e) {
              let imageProduct = document.getElementById(e.target.getAttribute("idImageProd"))
              let image = imageProduct.getAttribute("defaultImage")
              imageProduct.setAttribute("src", image)
          })
          item.addEventListener("click", function(e) {
              let image = e.target.getAttribute("image_hover")
              let imageProduct = document.getElementById(e.target.getAttribute("idImageProd"))
              imageProduct.setAttribute("src", image);
              imageProduct.setAttribute("defaultImage", image);
          })
      }
  
  </script>



{% schema %}
  {
    "name": "Product Section",
    "settings": [
      {
        "type": "textarea",
        "id": "colors",
        "label": "Colors Mapping",
        "default": "Green|#088A08\nRed|#FF0000\nBlue|#0000FF\nBlack|#000000\nYellow|#FFFF00\nGrey|#848484\nBrown|#3A2F0B\nWhite|#FFFFFF|\nOrange|#FF8000"
      }
    ]
  }
{% endschema %}